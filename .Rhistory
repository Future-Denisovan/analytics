lm10 <- lm(log(q_tide64) ~ log(p_tide128) + log(p_tide64) + log(p_wisk64) + week + factor(store), data = df2)
lm10DF <- tidy(lm10)
kable(lm10DF[1:8,], digits = 4)
baseprice128 <- mean(df2$p_tide128)
baseprice128
baseprice64 <- mean(df2$p_tide64)
baseprice64
numstores <- 86
# Base Volume = # of Stores * # Weeks in year * Avg. Sales of Product
basevolume128 <- numstores * 52 * mean(df2$salestide128)
basevolume128
# Base Volume = # of Stores * # Weeks in year * Avg. Sales of Product
basevolume64 <- numstores * 52 * mean(df2$salestide64)
basevolume64
#Storing inputs and finding cost per product
retail.margin <- .25
costperoz <- .027
costper128 <- costperoz * 128
costper64 <- costperoz * 64
costper128
costper64
# Finding Base Contribution Margin
baseprice128
baseprice64
stores
basevolume128
basevolume64
basevolume128
knitr::opts_chunk$set(echo = TRUE)
#install.packages('devtools')#Packages required
#devtools::install_github("ropensci/skimr")
#install.packages('arm')#to plot coefficients
load(file = "Detergent.RData")
dt <- detergent_DF
library(skimr)
library(psych)
library(ggplot2)
library(arm)
library(broom)
library(knitr)
skim(dt)
head(dt)
#Make Revenue column for each product
dt$T128Revenue <- dt$q_tide128 * dt$p_tide128
dt$T64Revenue <- dt$q_tide64 * dt$p_tide64
dt$WiskRevenue <- dt$q_wisk64 * dt$p_wisk64
TotalRevenue <- sum(dt$T128Revenue) + sum(dt$T64Revenue) + sum(dt$WiskRevenue)
T128Rev <- (sum(dt$T128Revenue) / TotalRevenue) * 100
T64Rev <- (sum(dt$T64Revenue) / TotalRevenue) * 100
WiskRev <- (sum(dt$WiskRevenue) / TotalRevenue) * 100
TotalRevenue1 <- format(round(TotalRevenue, 2), nsmall = 2)
T128Rev1 <- format(round(T128Rev, 2), nsmall = 2)
T64Rev1 <- format(round(T64Rev, 2), nsmall = 2)
WiskRev1 <- format(round(WiskRev, 2), nsmall = 2)
Mean128 <- mean(dt$p_tide128)
Mean64 <- mean(dt$p_tide64)
MeanW <- mean(dt$p_wisk64)
SD128 <- sd(dt$p_tide128)
SD64 <- sd(dt$p_tide64)
SDW <- sd(dt$p_wisk64)
Med128 <- median(dt$p_tide128)
Medn64 <- median(dt$p_tide64)
MednW <- median(dt$p_wisk64)
library(data.table)
Marketshare = c(T128Rev1, T64Rev1, WiskRev1)
MeanPrice = c(Mean128, Mean64, MeanW)
MedianPrice = c(Med128, Medn64, MednW)
Std.Dev = c(SD128, SD64, SDW)
Product <- c("Tide 128 oz", "Tide 64 oz", "Wisk 64 oz")
MarketShare <- data.frame(Product, Marketshare, MeanPrice, MedianPrice, Std.Dev)
describe(dt)
MarketShare
dt$PriceGap1 <- dt$p_tide128 - dt$p_tide64
dt$PriceGap2 <- dt$p_tide64 - dt$p_wisk64
MeanPG1 <- mean(dt$PriceGap1)
MeanPG2 <- mean(dt$PriceGap2)
SDPG1 <- sd(dt$PriceGap1)
SDPG2 <- sd(dt$PriceGap2)
MedPG1 <- median(dt$PriceGap1)
MedPG2 <- median(dt$PriceGap2)
MeanPriceGap = c(MeanPG1, MeanPG2)
MedianPriceGap = c(MedPG1, MedPG2)
Std.DevPriceGap = c(SDPG1, SDPG2)
PriceGap <- c("Tide128- Tide64", "Tide64 - Wisk64")
PriceGap <- data.frame(PriceGap, MeanPriceGap, MedianPriceGap, Std.DevPriceGap)
PriceGap
par(mfrow=c(1,2))#Set the plotting area into a 1*2 array
#Set axis to the same for better comparison
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64",
xlim = c(-3,8))
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64",xlim = c(-3,8))
par(mfrow=c(1,1))
dt$svelocity128 <- (dt$q_tide128/dt$acv)
dt$svelocity64 <- (dt$q_tide64/dt$acv)
SalesVelocity128 <- sum(dt$svelocity128)
SalesVelocity64 <- sum(dt$svelocity64)
SalesVelocity128
SalesVelocity64
lm128 = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64), data = dt)
lm64 = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64), data = dt)
summary(lm128)
summary(lm64)
lm128_coef<- summary(lm128)$coefficients
lm64_coef<-summary(lm64)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graph<-c(lm64_coef[2:4,1],lm128_coef[2:4,1])
pe_graph
barplot(pe_graph, main = "Price Elasticity", xlab = "Tide64's PE_______________________Tide128's PE", col = rainbow(6), names.arg = c('Cross Tide','Own', 'Cross Wisk','Own', 'Cross Tide', 'Cross Wisk' ))
dt$week<-as.integer(dt$week)
lm128_B <- lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64) +  week, data = dt)
lm64_B <- lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64) + week, data = dt)
lm128_Ba<-tidy(lm128_B)
lm64_Ba<-tidy(lm64_B)
kable(lm128_Ba[c(1:4),], digits = 4)
kable(lm64_Ba[c(1:4),], digits = 4)
summary(lm128_B)
summary(lm64_B)
lm128B_coef<- summary(lm128_B)$coefficients
lm64B_coef<-summary(lm64_B)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graphB<-c(lm64B_coef[2:4,1],lm128B_coef[2:4,1])
pe_graphB
barplot(pe_graphB, main = "Price Elasticity", xlab = "Tide64's PE_______________________Tide128's PE", col = rainbow(6), names.arg = c('Cross Tide','Own', 'Cross Wisk','Own', 'Cross Tide', 'Cross Wisk' ))
library(dplyr)
detergent_promos <- dt %>% select(week, promoflag) %>%
filter(promoflag == 1)
totalweeks<-length(unique(dt$week))
promoweeks<-length(unique(detergent_promos$week))
store_week_fraction <- paste(promoweeks,totalweeks, sep = '/')
store_week_fraction #Did we lose some data, there isn't the expected 300 weeks.
sum(dt$promoflag)
detergent_DF_2 = subset(detergent_DF, promoflag != 1)
detergent_DF_2$svelocity128 <- (detergent_DF_2$q_tide128/detergent_DF_2$acv)
detergent_DF_2$svelocity64 <- (detergent_DF_2$q_tide64/detergent_DF_2$acv)
SalesVelocity128_B <- sum(detergent_DF_2$svelocity128)
SalesVelocity64_B <- sum(detergent_DF_2$svelocity64)
lm128_C = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64) +  week, data = detergent_DF_2)
lm64_C = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64) + week, data = detergent_DF_2)
summary(lm128_C)
summary(lm64_C)
lm128_Ca<-tidy(lm128_C)
lm64_Ca<-tidy(lm64_C)
kable(lm128_Ca[c(1:4),], digits = 4)
kable(lm64_Ca[c(1:4),], digits = 4)
lm128C_coef<- summary(lm128_C)$coefficients
lm64C_coef<-summary(lm64_C)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graphC<-c(lm64C_coef[2:4,1],lm128C_coef[2:4,1])
pe_graphC
barplot(pe_graphC, main = "Price Elasticity", xlab = "Tide64's PE_______________________Tide128's PE", col = rainbow(6), names.arg = c('Cross Tide','Own', 'Cross Wisk','Own', 'Cross Tide', 'Cross Wisk' ))
lm128_D<-lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64) + week + factor(store), data = detergent_DF_2)
lm64_D <- lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64)+ log(p_wisk64) + week+ factor(store), data = detergent_DF_2)
lm128D_coef<- summary(lm128_D)$coefficients
lm64D_coef<-summary(lm64_D)$coefficients#Lets graph these coefficients so we can see all these at a glance
library(broom)
library(knitr)
lm128_D <- tidy(lm128_D)
lm64_D <- tidy(lm64_D)
kable(lm64_D[c(1:4),], digits = 4)
#Comparison
kable(lm64_Ca[c(1:4),], digits = 4)
#Comparison
kable(lm128_D[c(1:4),], digits = 4)
kable(lm128_Ca[c(1:4),], digits = 4)
pe_graphD<-c(lm64D_coef[2:4,1],lm128D_coef[2:4,1])
pe_graphD
barplot(pe_graphD, main = "Price Elasticity", xlab = "Tide64's PE_______________________Tide128's PE", col = rainbow(6), names.arg = c('Cross Tide','Own', 'Cross Wisk','Own', 'Cross Tide', 'Cross Wisk' ))
lm128_E<-lm(log(q_tide128) ~ log(p_tide128)+log(p_tide64) +log(p_wisk64) + week + factor(store), data = detergent_DF_2)
lm64_E<- lm(log(q_tide64) ~ log(p_tide128)+log(p_tide64) +log(p_wisk64) + week+ factor(store), data = detergent_DF_2)
lm128_Ea = tidy(lm128_E)
lm64_Ea = tidy(lm64_E)
kable(lm128_D[c(1:4),], digits = 4)
kable(lm128_Ea[c(1:4),], digits = 4)
kable(lm64_D[c(1:4),], digits = 4)
kable(lm64_Ea[c(1:4),], digits = 4)
lm128E_coef<- summary(lm128_E)$coefficients
lm64E_coef<-summary(lm64_E)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graphE<-c(lm64E_coef[2:4,1],lm128E_coef[2:4,1])
pe_graphE
barplot(pe_graphE, main = "Price Elasticity", xlab = "Tide64's PE_______________________Tide128's PE", col = rainbow(6), names.arg = c('Cross Tide','Own', 'Cross Wisk','Own', 'Cross Tide', 'Cross Wisk' ))
baseprice128 = mean(detergent_DF_2$p_tide128)
baseprice128
baseprice64 = mean(detergent_DF_2$p_tide64)
baseprice64
stores <- length(unique(detergent_DF_2$store))
basevolume128 = stores * 52 * mean(detergent_DF_2$q_tide128)
basevolume64 = stores * 52 * mean(detergent_DF_2$q_tide64)
basevolume128
basevolume64
Bprofit128 = basevolume128 * ((baseprice128*0.75) - 0.25)
Bprofit64 = basevolume64 * ((baseprice64*0.75) - 0.25)
BaseTotalProfit <- Bprofit128 + Bprofit64
BaseTotalProfit
pricechange = 0.05
# Specify the function
demand_change <- function(price_change1, price_change2, price_elasticity1, price_elasticity2, price_elasticity3, basequantity) {
# New demand from method 1
quantity_change_1 = ((1 + price_change1)^price_elasticity1) * ((1 + price_change2)^price_elasticity2) *
((1)^price_elasticity3)
#Get new quantity from ratio of new / old
NewQuantity = quantity_change_1 * basequantity
# Return results as a list
return(NewQuantity)
}
New_Q128_1 <- demand_change(0.05, 0.05, -2.11, 0.211,1.1648, basevolume128)
New_Q64_1 <- demand_change(0.05,0.05,1.16,-1.585, -0.2809, basevolume64)
New_Q128_2 <- demand_change(-0.05, -0.05, -2.11, 0.211, 1.1648, basevolume128)
New_Q64_2 <- demand_change(-0.05,-0.05,1.16,-1.585 , -0.2809, basevolume64)
New_Q128_3 <- demand_change(0.05, 0.05, -2.11, 0.211, 1.1648, basevolume128)
New_Q64_3 <- demand_change(-0.05,-0.05,1.16,-1.585 , -0.2809, basevolume64)
New_Q128_4 <- demand_change(-0.05, -0.05, -2.11, 0.211, 1.1648, basevolume128)
New_Q64_4 <- demand_change(0.05,0.05,1.16,-1.585 , -0.2809, basevolume64)
#Total Profit calculations
TotalProfit1 <- (New_Q128_1* (baseprice128*1.05))*(New_Q64_1* (baseprice64*1.05))
TotalProfit2 <- (New_Q128_2*(baseprice128*0.95))*(New_Q64_2* (baseprice64*0.95))
TotalProfit3 <- (New_Q128_3*(baseprice128*1.05))*(New_Q64_3*(baseprice64*0.95))
TotalProfit4 <- (New_Q128_4*(baseprice128*0.95))*(New_Q64_4* (baseprice64*1.05))
library(scales)
del_price_128 = c(0.05, -0.05, 0.05, -0.05)
del_price_64 = c(0.05, -0.05, -0.05, 0.05)
q_128 = c(New_Q128_1, New_Q128_2, New_Q128_3, New_Q128_4)
q_64 = c(New_Q64_1, New_Q64_2, New_Q64_3, New_Q64_4)
TotalProfits = c(TotalProfit1, TotalProfit2, TotalProfit3, TotalProfit4)
Price_Change<- as.factor(paste('128',del_price_128,'64',del_price_64, sep = "|"))
NewTable <- data.frame(del_price_128, del_price_64, q_128, q_64,Price_Change, TotalProfits)
NewTable
ggplot(data = NewTable, aes(Price_Change,TotalProfits))+geom_point(size=10,show.legend = NA)+scale_y_continuous(labels = comma)+geom_label(
label="Revenue from Recommended change",
x=3.15,
y=2800500000000,
label.padding = unit(0.55, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="grey")
detergent_DF <- get(load("Detergent.RData"))
dt <- detergent_DF
library(skimr)
library(psych)
library(ggplot2)
library(arm)
library(broom)
library(knitr)
skim(dt)
head(dt)
knitr::opts_chunk$set(echo = TRUE)
#install.packages('devtools')#Packages required
#devtools::install_github("ropensci/skimr")
#install.packages('arm')#to plot coefficients
load(file = "Detergent.RData")
dt <- detergent_DF
library(skimr)
library(psych)
library(ggplot2)
library(arm)
library(broom)
library(knitr)
skim(dt)
head(dt)
#Make Revenue column for each product
dt$T128Revenue <- dt$q_tide128 * dt$p_tide128
dt$T64Revenue <- dt$q_tide64 * dt$p_tide64
dt$WiskRevenue <- dt$q_wisk64 * dt$p_wisk64
TotalRevenue <- sum(dt$T128Revenue) + sum(dt$T64Revenue) + sum(dt$WiskRevenue)
T128Rev <- (sum(dt$T128Revenue) / TotalRevenue) * 100
T64Rev <- (sum(dt$T64Revenue) / TotalRevenue) * 100
WiskRev <- (sum(dt$WiskRevenue) / TotalRevenue) * 100
TotalRevenue1 <- format(round(TotalRevenue, 2), nsmall = 2)
T128Rev1 <- format(round(T128Rev, 2), nsmall = 2)
T64Rev1 <- format(round(T64Rev, 2), nsmall = 2)
WiskRev1 <- format(round(WiskRev, 2), nsmall = 2)
Mean128 <- mean(dt$p_tide128)
Mean64 <- mean(dt$p_tide64)
MeanW <- mean(dt$p_wisk64)
SD128 <- sd(dt$p_tide128)
SD64 <- sd(dt$p_tide64)
SDW <- sd(dt$p_wisk64)
Med128 <- median(dt$p_tide128)
Medn64 <- median(dt$p_tide64)
MednW <- median(dt$p_wisk64)
library(data.table)
Marketshare = c(T128Rev1, T64Rev1, WiskRev1)
MeanPrice = c(Mean128, Mean64, MeanW)
MedianPrice = c(Med128, Medn64, MednW)
Std.Dev = c(SD128, SD64, SDW)
Product <- c("Tide 128 oz", "Tide 64 oz", "Wisk 64 oz")
MarketShare <- data.frame(Product, Marketshare, MeanPrice, MedianPrice, Std.Dev)
describe(dt)
MarketShare
dt$PriceGap1 <- dt$p_tide128 - dt$p_tide64
dt$PriceGap2 <- dt$p_tide64 - dt$p_wisk64
MeanPG1 <- mean(dt$PriceGap1)
MeanPG2 <- mean(dt$PriceGap2)
SDPG1 <- sd(dt$PriceGap1)
SDPG2 <- sd(dt$PriceGap2)
MedPG1 <- median(dt$PriceGap1)
MedPG2 <- median(dt$PriceGap2)
MeanPriceGap = c(MeanPG1, MeanPG2)
MedianPriceGap = c(MedPG1, MedPG2)
Std.DevPriceGap = c(SDPG1, SDPG2)
PriceGap <- c("Tide128- Tide64", "Tide64 - Wisk64")
PriceGap <- data.frame(PriceGap, MeanPriceGap, MedianPriceGap, Std.DevPriceGap)
PriceGap
par(mfrow=c(1,2))#Set the plotting area into a 1*2 array
#Set axis to the same for better comparison
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64",
xlim = c(-3,8))
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64",xlim = c(-3,8))
par(mfrow=c(1,1))
dt$svelocity128 <- (dt$q_tide128/dt$acv)
dt$svelocity64 <- (dt$q_tide64/dt$acv)
SalesVelocity128 <- sum(dt$svelocity128)
SalesVelocity64 <- sum(dt$svelocity64)
SalesVelocity128
SalesVelocity64
lm128 = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64), data = dt)
lm64 = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64), data = dt)
summary(lm128)
summary(lm64)
lm128_coef<- summary(lm128)$coefficients
lm64_coef<-summary(lm64)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graph<-c(lm64_coef[2:4,1],lm128_coef[2:4,1])
pe_graph
barplot(pe_graph, main = "Price Elasticity", xlab = "Tide64's PE_______________________Tide128's PE", col = rainbow(6), names.arg = c('Cross Tide','Own', 'Cross Wisk','Own', 'Cross Tide', 'Cross Wisk' ))
dt$week<-as.integer(dt$week)
lm128_B <- lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64) +  week, data = dt)
lm64_B <- lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64) + week, data = dt)
lm128_Ba<-tidy(lm128_B)
lm64_Ba<-tidy(lm64_B)
kable(lm128_Ba[c(1:4),], digits = 4)
kable(lm64_Ba[c(1:4),], digits = 4)
summary(lm128_B)
summary(lm64_B)
lm128B_coef<- summary(lm128_B)$coefficients
lm64B_coef<-summary(lm64_B)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graphB<-c(lm64B_coef[2:4,1],lm128B_coef[2:4,1])
pe_graphB
barplot(pe_graphB, main = "Price Elasticity", xlab = "Tide64's PE_______________________Tide128's PE", col = rainbow(6), names.arg = c('Cross Tide','Own', 'Cross Wisk','Own', 'Cross Tide', 'Cross Wisk' ))
library(dplyr)
detergent_promos <- dt %>% select(week, promoflag) %>%
filter(promoflag == 1)
totalweeks<-length(unique(dt$week))
promoweeks<-length(unique(detergent_promos$week))
store_week_fraction <- paste(promoweeks,totalweeks, sep = '/')
store_week_fraction #Did we lose some data, there isn't the expected 300 weeks.
sum(dt$promoflag)
detergent_DF_2 = subset(detergent_DF, promoflag != 1)
detergent_DF_2$svelocity128 <- (detergent_DF_2$q_tide128/detergent_DF_2$acv)
detergent_DF_2$svelocity64 <- (detergent_DF_2$q_tide64/detergent_DF_2$acv)
SalesVelocity128_B <- sum(detergent_DF_2$svelocity128)
SalesVelocity64_B <- sum(detergent_DF_2$svelocity64)
lm128_C = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64) +  week, data = detergent_DF_2)
lm64_C = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64) + week, data = detergent_DF_2)
summary(lm128_C)
summary(lm64_C)
lm128_Ca<-tidy(lm128_C)
lm64_Ca<-tidy(lm64_C)
kable(lm128_Ca[c(1:4),], digits = 4)
kable(lm64_Ca[c(1:4),], digits = 4)
lm128C_coef<- summary(lm128_C)$coefficients
lm64C_coef<-summary(lm64_C)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graphC<-c(lm64C_coef[2:4,1],lm128C_coef[2:4,1])
pe_graphC
barplot(pe_graphC, main = "Price Elasticity", xlab = "Tide64's PE_______________________Tide128's PE", col = rainbow(6), names.arg = c('Cross Tide','Own', 'Cross Wisk','Own', 'Cross Tide', 'Cross Wisk' ))
lm128_D<-lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + log(p_wisk64) + week + factor(store), data = detergent_DF_2)
lm64_D <- lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64)+ log(p_wisk64) + week+ factor(store), data = detergent_DF_2)
lm128D_coef<- summary(lm128_D)$coefficients
lm64D_coef<-summary(lm64_D)$coefficients#Lets graph these coefficients so we can see all these at a glance
library(broom)
library(knitr)
lm128_D <- tidy(lm128_D)
lm64_D <- tidy(lm64_D)
kable(lm64_D[c(1:4),], digits = 4)
#Comparison
kable(lm64_Ca[c(1:4),], digits = 4)
#Comparison
kable(lm128_D[c(1:4),], digits = 4)
kable(lm128_Ca[c(1:4),], digits = 4)
pe_graphD<-c(lm64D_coef[2:4,1],lm128D_coef[2:4,1])
pe_graphD
barplot(pe_graphD, main = "Price Elasticity", xlab = "Tide64's PE_______________________Tide128's PE", col = rainbow(6), names.arg = c('Cross Tide','Own', 'Cross Wisk','Own', 'Cross Tide', 'Cross Wisk' ))
lm128_E<-lm(log(q_tide128) ~ log(p_tide128)+log(p_tide64) +log(p_wisk64) + week + factor(store), data = detergent_DF_2)
lm64_E<- lm(log(q_tide64) ~ log(p_tide128)+log(p_tide64) +log(p_wisk64) + week+ factor(store), data = detergent_DF_2)
lm128_Ea = tidy(lm128_E)
lm64_Ea = tidy(lm64_E)
kable(lm128_D[c(1:4),], digits = 4)
kable(lm128_Ea[c(1:4),], digits = 4)
kable(lm64_D[c(1:4),], digits = 4)
kable(lm64_Ea[c(1:4),], digits = 4)
lm128E_coef<- summary(lm128_E)$coefficients
lm64E_coef<-summary(lm64_E)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graphE<-c(lm64E_coef[2:4,1],lm128E_coef[2:4,1])
pe_graphE
barplot(pe_graphE, main = "Price Elasticity", xlab = "Tide64's PE_______________________Tide128's PE", col = rainbow(6), names.arg = c('Cross Tide','Own', 'Cross Wisk','Own', 'Cross Tide', 'Cross Wisk' ))
baseprice128 = mean(detergent_DF_2$p_tide128)
baseprice128
baseprice64 = mean(detergent_DF_2$p_tide64)
baseprice64
stores <- length(unique(detergent_DF_2$store))
basevolume128 = stores * 52 * mean(detergent_DF_2$q_tide128)
basevolume64 = stores * 52 * mean(detergent_DF_2$q_tide64)
basevolume128
basevolume64
Bprofit128 = basevolume128 * ((baseprice128*0.75) - 0.25)
Bprofit64 = basevolume64 * ((baseprice64*0.75) - 0.25)
BaseTotalProfit <- Bprofit128 + Bprofit64
BaseTotalProfit
pricechange = 0.05
# Specify the function
demand_change <- function(price_change1, price_change2, price_elasticity1, price_elasticity2, price_elasticity3, basequantity) {
# New demand from method 1
quantity_change_1 = ((1 + price_change1)^price_elasticity1) * ((1 + price_change2)^price_elasticity2) *
((1)^price_elasticity3)
#Get new quantity from ratio of new / old
NewQuantity = quantity_change_1 * basequantity
# Return results as a list
return(NewQuantity)
}
New_Q128_1 <- demand_change(0.05, 0.05, -2.11, 0.211,1.1648, basevolume128)
New_Q64_1 <- demand_change(0.05,0.05,1.16,-1.585, -0.2809, basevolume64)
New_Q128_2 <- demand_change(-0.05, -0.05, -2.11, 0.211, 1.1648, basevolume128)
New_Q64_2 <- demand_change(-0.05,-0.05,1.16,-1.585 , -0.2809, basevolume64)
New_Q128_3 <- demand_change(0.05, 0.05, -2.11, 0.211, 1.1648, basevolume128)
New_Q64_3 <- demand_change(-0.05,-0.05,1.16,-1.585 , -0.2809, basevolume64)
New_Q128_4 <- demand_change(-0.05, -0.05, -2.11, 0.211, 1.1648, basevolume128)
New_Q64_4 <- demand_change(0.05,0.05,1.16,-1.585 , -0.2809, basevolume64)
#Total Profit calculations
TotalProfit1 <- (New_Q128_1* (baseprice128*1.05))*(New_Q64_1* (baseprice64*1.05))
TotalProfit2 <- (New_Q128_2*(baseprice128*0.95))*(New_Q64_2* (baseprice64*0.95))
TotalProfit3 <- (New_Q128_3*(baseprice128*1.05))*(New_Q64_3*(baseprice64*0.95))
TotalProfit4 <- (New_Q128_4*(baseprice128*0.95))*(New_Q64_4* (baseprice64*1.05))
library(scales)
del_price_128 = c(0.05, -0.05, 0.05, -0.05)
del_price_64 = c(0.05, -0.05, -0.05, 0.05)
q_128 = c(New_Q128_1, New_Q128_2, New_Q128_3, New_Q128_4)
q_64 = c(New_Q64_1, New_Q64_2, New_Q64_3, New_Q64_4)
TotalProfits = c(TotalProfit1, TotalProfit2, TotalProfit3, TotalProfit4)
Price_Change<- as.factor(paste('128',del_price_128,'64',del_price_64, sep = "|"))
NewTable <- data.frame(del_price_128, del_price_64, q_128, q_64,Price_Change, TotalProfits)
NewTable
ggplot(data = NewTable, aes(Price_Change,TotalProfits))+geom_point(size=10,show.legend = NA)+scale_y_continuous(labels = comma)+geom_label(
label="Revenue from Recommended change",
x=3.15,
y=2800500000000,
label.padding = unit(0.55, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="grey")
#install.packages('devtools')#Packages required
#devtools::install_github("ropensci/skimr")
#install.packages('arm')#to plot coefficients
install.packages("yaml")
install.packages("yaml")
#install.packages('devtools')#Packages required
#devtools::install_github("ropensci/skimr")
#install.packages('arm')#to plot coefficients
uninstall.packages("yaml")
#install.packages('devtools')#Packages required
#devtools::install_github("ropensci/skimr")
#install.packages('arm')#to plot coefficients
remove.packages("yaml")
install.packages("yaml")
install.packages("yaml")
knitr::opts_chunk$set(echo = TRUE)
#install.packages('devtools')#Packages required
#devtools::install_github("ropensci/skimr")
#install.packages('arm')#to plot coefficients
#remove.packages("yaml")
#install.packages("yaml")
write.csv(detergent_DF, file ="Detergent.RData")
read.csv("Detergent.csv")
knitr::opts_chunk$set(echo = TRUE)
#install.packages('devtools')#Packages required
#devtools::install_github("ropensci/skimr")
#install.packages('arm')#to plot coefficients
Profit1 = (New_Q128_1 * ((baseprice128*1.05*0.75) - 0.25)) + (New_Q64_1 * ((baseprice64*1.05*0.75) - 0.25))
Profit2 = (New_Q128_2 * ((baseprice128*0.95*0.75) - 0.25)) + (New_Q64_2 * ((baseprice64*0.95*0.75) - 0.25))
Profit3 = (New_Q128_3 * ((baseprice128*1.05*0.75) - 0.25)) + (New_Q64_3 * ((baseprice64*0.95*0.75) - 0.25))
Profit4 = (New_Q128_4 * ((baseprice128*0.95*0.75) - 0.25)) + (New_Q64_4 * ((baseprice64*0.95*0.75) - 0.25))
TotalProfitsR = c(Profit1, Profit2, Profit3, Profit4)
library(scales)
del_price_128 = c(0.05, -0.05, 0.05, -0.05)
del_price_64 = c(0.05, -0.05, -0.05, 0.05)
q_128 = c(New_Q128_1, New_Q128_2, New_Q128_3, New_Q128_4)
q_64 = c(New_Q64_1, New_Q64_2, New_Q64_3, New_Q64_4)
#TotalProfitsW = c(TotalProfit1, TotalProfit2, TotalProfit3, TotalProfit4)
TotalProfitsR = c(Profit1, Profit2, Profit3, Profit4)
Price_Change<- as.factor(paste('128',del_price_128,'64',del_price_64, sep = "|"))
NewTable <- data.frame(del_price_128, del_price_64, q_128, q_64,Price_Change, TotalProfitsR)
NewTable
ggplot(data = NewTable, aes(Price_Change,TotalProfits))+geom_point(size=10,show.legend = NA)+scale_y_continuous(labels = comma)+geom_label(
label="Revenue from Recommended change",
x=3.15,
y=2800500000000,
label.padding = unit(0.55, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="grey")
library(scales)
del_price_128 = c(0.05, -0.05, 0.05, -0.05)
del_price_64 = c(0.05, -0.05, -0.05, 0.05)
q_128 = c(New_Q128_1, New_Q128_2, New_Q128_3, New_Q128_4)
q_64 = c(New_Q64_1, New_Q64_2, New_Q64_3, New_Q64_4)
#TotalProfitsW = c(TotalProfit1, TotalProfit2, TotalProfit3, TotalProfit4)
TotalProfitsR = c(Profit1, Profit2, Profit3, Profit4)
Price_Change<- as.factor(paste('128',del_price_128,'64',del_price_64, sep = "|"))
NewTable <- data.frame(del_price_128, del_price_64, q_128, q_64,Price_Change, TotalProfitsR)
NewTable
ggplot(data = NewTable, aes(Price_Change,TotalProfitsR))+geom_point(size=10,show.legend = NA)+scale_y_continuous(labels = comma)+geom_label(
label="Revenue from Recommended change",
x=3.15,
y=2800500000000,
label.padding = unit(0.55, "lines"), # Rectangle size around label
label.size = 0.35,
color = "black",
fill="grey")
