devtools::install_github("ropensci/skimr")
knitr::opts_chunk$set(echo = TRUE)
install.packages('devtools')
devtools::install_github("ropensci/skimr")
dt <- detergent_DF
library(skimr)
skim(dt)
head(dt)
#Make Revenue column for each product
dt$T128Revenue <- dt$q_tide128 * dt$p_tide128
dt$T64Revenue <- dt$q_tide64 * dt$p_tide64
dt$WiskRevenue <- dt$q_wisk64 * dt$p_wisk64
TotalRevenue <- sum(dt$T128Revenue) + sum(dt$T64Revenue) + sum(dt$WiskRevenue)
T128Rev <- (sum(dt$T128Revenue) / TotalRevenue) * 100
T64Rev <- (sum(dt$T64Revenue) / TotalRevenue) * 100
WiskRev <- (sum(dt$WiskRevenue) / TotalRevenue) * 100
TotalRevenue1 <- format(round(TotalRevenue, 2), nsmall = 2)
T128Rev1 <- format(round(T128Rev, 2), nsmall = 2)
T64Rev1 <- format(round(T64Rev, 2), nsmall = 2)
WiskRev1 <- format(round(WiskRev, 2), nsmall = 2)
Mean128 <- mean(dt$p_tide128)
Mean64 <- mean(dt$p_tide64)
MeanW <- mean(dt$p_wisk64)
SD128 <- sd(dt$p_tide128)
SD64 <- sd(dt$p_tide64)
SDW <- sd(dt$p_wisk64)
Med128 <- median(dt$p_tide128)
Medn64 <- median(dt$p_tide64)
MednW <- median(dt$p_wisk64)
library(data.table)
Marketshare = c(T128Rev1, T64Rev1, WiskRev1)
MeanPrice = c(Mean128, Mean64, MeanW)
MedianPrice = c(Med128, Medn64, MednW)
Std.Dev = c(SD128, SD64, SDW)
Product <- c("Tide 128 oz", "Tide 64 oz", "Wisk 64 oz")
MarketShare <- data.frame(Product, Marketshare, MeanPrice, MedianPrice, Std.Dev)
MarketShare
dt$PriceGap1 <- dt$p_tide128 - dt$p_tide64
dt$PriceGap2 <- dt$p_tide64 - dt$p_wisk64
MeanPG1 <- mean(dt$PriceGap1)
MeanPG2 <- mean(dt$PriceGap2)
SDPG1 <- sd(dt$PriceGap1)
SDPG2 <- sd(dt$PriceGap2)
MedPG1 <- median(dt$PriceGap1)
MedPG2 <- median(dt$PriceGap2)
MeanPriceGap = c(MeanPG1, MeanPG2)
MedianPriceGap = c(MedPG1, MedPG2)
Std.DevPriceGap = c(SDPG1, SDPG2)
PriceGap <- c("Tide128- Tide64", "Tide64 - Wisk64")
PriceGap <- data.frame(PriceGap, MeanPriceGap, MedianPriceGap, Std.DevPriceGap)
PriceGap
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64", xlim = c(0, 8))
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64", xlim = c(0, 8))
dt$svelocity128 <- (dt$q_tide128/dt$acv)
dt$svelocity64 <- (dt$q_tide64/dt$acv)
SalesVelocity128 <- sum(dt$svelocity128)
SalesVelocity64 <- sum(dt$svelocity64)
SalesVelocity128
SalesVelocity64
dt$svelocity128 <- (dt$q_tide128/dt$acv)
dt$svelocity64 <- (dt$q_tide64/dt$acv)
SalesVelocity128 <- sum(dt$svelocity128)
SalesVelocity64 <- sum(dt$svelocity64)
SalesVelocity128
SalesVelocity64
lm128 = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64), data = dt)
lm64 = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64), data = dt)
summary(lm128)
summary(lm64)
lm128_B = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + log(week), data = dt)
lm64_B = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + log(week), data = dt)
summary(lm128_B)
summary(lm64_B)
library(dplyr)
detergent_promos <- dt %>% select(week, promoflag) %>%
filter(promoflag == 1)
detergent_promos
detergent_DF_2 = subset(detergent_DF, promoflag != 1)
detergent_DF_2$svelocity128 <- (detergent_DF_2$q_tide128/detergent_DF_2$acv)
detergent_DF_2$svelocity64 <- (detergent_DF_2$q_tide64/detergent_DF_2$acv)
SalesVelocity128_B <- sum(detergent_DF_2$svelocity128)
SalesVelocity64_B <- sum(detergent_DF_2$svelocity64)
lm128_C = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + log(week), data = detergent_DF_2)
lm64_C = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + log(week), data = detergent_DF_2)
summary(lm128_C)
summary(lm64_C)
lm128_D = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + log(week) + factor(store), data = detergent_DF_2)
lm64_D = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64)+ log(week)+ factor(store), data = detergent_DF_2)
library(broom)
library(knitr)
lm128_D = tidy(lm128_D)
lm64_D = tidy(lm64_D)
kable(lm128_D[c(1:4),], digits = 4)
kable(lm64_D[c(1:4),], digits = 4)
lm128_E = lm(log(q_tide128) ~ log(p_tide128)+log(p_tide64) + log(week) + factor(store), data = detergent_DF_2)
lm64_E = lm(log(q_tide64) ~ log(p_tide128)+log(p_tide64) + log(week)+ factor(store), data = detergent_DF_2)
lm128_E = tidy(lm128_E)
lm64_E = tidy(lm64_E)
kable(lm128_E[c(1:4),], digits = 4)
kable(lm64_E[c(1:4),], digits = 4)
baseprice128 = mean(detergent_DF_2$p_tide128)
baseprice64 = mean(detergent_DF_2$p_tide64)
stores = 86
basevolume128 = stores * 52 * mean(detergent_DF_2$q_tide128)
basevolume64 = stores * 52 * mean(detergent_DF_2$q_tide64)
basevolume128
Bprofit128 = basevolume128 * ((baseprice128*0.75) - 0.25)
Bprofit64 = basevolume64 * ((baseprice64*0.75) - 0.25)
BaseTotalProfit <- Bprofit128 + Bprofit64
BaseTotalProfit
pricechange = 0.05
# Specify the function
demand_change <- function(price_change1, price_change2, price_elasticity1, price_elasticity2, basequantity) {
# New demand from method 1
quantity_change_1 = ((1 + price_change1)^price_elasticity1) * ((1 + price_change2)^price_elasticity2)
#Get new quantity from ratio of new / old
NewQuantity = quantity_change_1 * basequantity
# Return results as a list
return(NewQuantity)
}
New_Q128_1 <- demand_change(0.05, 0.05, -2.11, 0.211, basevolume128)
New_Q64_1 <- demand_change(0.05,0.05,1.16,-1.585, basevolume64)
New_Q128_2 <- demand_change(-0.05, -0.05, -2.11, 0.211, basevolume128)
New_Q64_2 <- demand_change(-0.05,-0.05,1.16,-1.585, basevolume64)
New_Q128_3 <- demand_change(0.05, 0.05, -2.11, 0.211, basevolume128)
New_Q64_3 <- demand_change(-0.05,-0.05,1.16,-1.585, basevolume64)
New_Q128_4 <- demand_change(-0.05, -0.05, -2.11, 0.211, basevolume128)
New_Q64_4 <- demand_change(0.05,0.05,1.16,-1.585, basevolume64)
#Total Profit calculations
TotalProfit1 <- (New_Q128_1* (baseprice128*1.05))*(New_Q64_1* (baseprice64*1.05))
TotalProfit2 <- (New_Q128_2*(baseprice128*0.95))*(New_Q64_2* (baseprice64*0.95))
TotalProfit3 <- (New_Q128_3*(baseprice128*1.05))*(New_Q64_3*(baseprice64*0.95))
TotalProfit4 <- (New_Q128_4*(baseprice128*0.95))*(New_Q64_4* (baseprice64*1.05))
del_price_128 = c(0.05, -0.05, 0.05, -0.05)
del_price_64 = c(0.05, -0.05, -0.05, 0.05)
q_128 = c(New_Q128_1, New_Q128_2, New_Q128_3, New_Q128_4)
q_64 = c(New_Q64_1, New_Q64_2, New_Q64_3, New_Q64_4)
TotalProfits = c(TotalProfit1, TotalProfit2, TotalProfit3, TotalProfit4)
NewTable <- data.frame(del_price_128, del_price_64, q_128, q_64, TotalProfits)
NewTable
View(detergent_DF)
View(dt)
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
library(psych)
describe(dt)
library(ggplot2)
ggplot(data = dt)+geom_point(mapping = aes(x = acv, y = q_tide64,color = Store))
ggplot(data = dt)+geom_point(mapping = aes(x = acv, y = q_tide64,color = store))
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
hist(dt$acv)
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
hist(dt$acv, freq = F, col='green', breaks = 180)
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
plot(acv,stores)
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
plot(dt$acv,dt$stores)
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
plot(mean(dt$acv),mean(dt$stores))
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
plot(dt$stores)
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
plot(dt$stores, dt$week)
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
plot(dt$stores, dt$acv)
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
table(df$store)
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
aggregate(df$store)
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
table(dt$store, dt$acv)
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
table(dt$store)
par(mfrow=c(1,2))#Set the plotting area into a 1*2 array
hist(dt$PriceGap1, freq = F, col = "steelblue", breaks = 50, xlab = "Price Gap 1 ($)", main = "Price Gap of Tide 128 - Tide 64")
hist(dt$PriceGap2, freq = F, col = "orange", breaks = 50, xlab = "Price Gap 2 ($)", main = "Price Gap of Tide 64 - Wisk 64")
par(mfrow=c(1,1))
dt$week<-as.factor()
dt$week<-as.factor(dt$week)
lm128_B = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + log(week), data = dt)
dt$week<-as.factor(dt$week)
lm128_B = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
lm64_B = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
summary(lm128_B)
summary(lm64_B)
#Make Revenue column for each product
dt$T128Revenue <- dt$q_tide128 * dt$p_tide128
dt$T64Revenue <- dt$q_tide64 * dt$p_tide64
dt$WiskRevenue <- dt$q_wisk64 * dt$p_wisk64
TotalRevenue <- sum(dt$T128Revenue) + sum(dt$T64Revenue) + sum(dt$WiskRevenue)
T128Rev <- (sum(dt$T128Revenue) / TotalRevenue) * 100
T64Rev <- (sum(dt$T64Revenue) / TotalRevenue) * 100
WiskRev <- (sum(dt$WiskRevenue) / TotalRevenue) * 100
TotalRevenue1 <- format(round(TotalRevenue, 2), nsmall = 2)
T128Rev1 <- format(round(T128Rev, 2), nsmall = 2)
T64Rev1 <- format(round(T64Rev, 2), nsmall = 2)
WiskRev1 <- format(round(WiskRev, 2), nsmall = 2)
Mean128 <- mean(dt$p_tide128)
Mean64 <- mean(dt$p_tide64)
MeanW <- mean(dt$p_wisk64)
SD128 <- sd(dt$p_tide128)
SD64 <- sd(dt$p_tide64)
SDW <- sd(dt$p_wisk64)
Med128 <- median(dt$p_tide128)
Medn64 <- median(dt$p_tide64)
MednW <- median(dt$p_wisk64)
library(data.table)
Marketshare = c(T128Rev1, T64Rev1, WiskRev1)
MeanPrice = c(Mean128, Mean64, MeanW)
MedianPrice = c(Med128, Medn64, MednW)
Std.Dev = c(SD128, SD64, SDW)
Product <- c("Tide 128 oz", "Tide 64 oz", "Wisk 64 oz")
MarketShare <- data.frame(Product, Marketshare, MeanPrice, MedianPrice, Std.Dev)
describe(dt)
MarketShare
lm128_coef<- summary(lm128)$coefficients
lm128_coef
pe_graph<-lm64_coef[1,]
lm64_coef<-summary(lm64)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graph<-lm64_coef[1,]
pe_graph
lm128 = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64), data = dt)
lm64 = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64), data = dt)
summary(lm128)
summary(lm64)
lm128_coef<- summary(lm128)$coefficients
lm64_coef<-summary(lm64)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graph<-lm64_coef[,1]
pe_graph
pe_graph
pe_graph<-lm64_coef[,2:3]
pe_graph
```{r}
pe_graph<-lm64_coef[2:3,1]
pe_graph
pe_graph<-c(lm64_coef[2:3,1],lm128_coef[2:3,1])
pe_graph
boxplot(pe_graph)
plot(pe_graph)
barplot(pe_graph)
lm128 = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64), data = dt)
lm64 = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64), data = dt)
summary(lm128)
summary(lm64)
lm128_coef<- summary(lm128)$coefficients
lm64_coef<-summary(lm64)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graph<-c(lm64_coef[2:3,1],lm128_coef[2:3,1])
pe_graph
barplot(pe_graph)
lm128 = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64), data = dt)
lm64 = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64), data = dt)
summary(lm128)
summary(lm64)
lm128_coef<- summary(lm128)$coefficients
lm64_coef<-summary(lm64)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graph<-c(lm64_coef[2:3,1],lm128_coef[2:3,1])
pe_graph
barplot(pe_graph, main = "Price Elasticity", xlab = "Tide64's price elasticities ~~~~~~ Tide128's price elasticities")
lm128 = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64), data = dt)
lm64 = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64), data = dt)
summary(lm128)
summary(lm64)
lm128_coef<- summary(lm128)$coefficients
lm64_coef<-summary(lm64)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graph<-c(lm64_coef[2:3,1],lm128_coef[2:3,1])
pe_graph
barplot(pe_graph, main = "Price Elasticity", xlab = "Tide64's price elasticities ~~~~~~ Tide128's price elasticities", col = rainbow)
lm128 = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64), data = dt)
lm64 = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64), data = dt)
summary(lm128)
summary(lm64)
lm128_coef<- summary(lm128)$coefficients
lm64_coef<-summary(lm64)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graph<-c(lm64_coef[2:3,1],lm128_coef[2:3,1])
pe_graph
barplot(pe_graph, main = "Price Elasticity", xlab = "Tide64's price elasticities ~~~~~~ Tide128's price elasticities", col = 4)
lm128 = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64), data = dt)
lm64 = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64), data = dt)
summary(lm128)
summary(lm64)
lm128_coef<- summary(lm128)$coefficients
lm64_coef<-summary(lm64)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graph<-c(lm64_coef[2:3,1],lm128_coef[2:3,1])
pe_graph
barplot(pe_graph, main = "Price Elasticity", xlab = "Tide64's price elasticities ~~~~~~ Tide128's price elasticities", col = rainbow(4))
dt$week<-as.factor(dt$week)#Factor and create dummy variables
lm128_B = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
lm64_B = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
summary(lm128_B)
summary(lm64_B)
lm128 = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64), data = dt)
lm64 = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64), data = dt)
summary(lm128)
summary(lm64)
lm128_coef<- summary(lm128)$coefficients
lm64_coef<-summary(lm64)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graph<-c(lm64_coef[2:3,1],lm128_coef[2:3,1])
pe_graph
barplot(pe_graph, main = "Price Elasticity", xlab = "Tide64's price elasticities ~~~~~~ Tide128's price elasticities", col = rainbow(4))
dt$week<-as.factor(dt$week)#Factor and create dummy variables
lm128_B = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
lm64_B = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
#summary(lm128_B) Run this only if you want to see hundreds of dummy variables printed
#summary(lm64_B)
model_b_results<-c(lm128_B$adj.r.squared, lm64_B$adj.r.squared)
model_b_results
dt$week<-as.factor(dt$week)#Factor and create dummy variables
lm128_B = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
lm64_B = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
#summary(lm128_B) Run this only if you want to see hundreds of dummy variables printed
#summary(lm64_B)
model_b_results<-c(summary(lm128_B$adj.r.squared), summary(lm64_B$adj.r.squared))
model_b_results
dt$week<-as.factor(dt$week)#Factor and create dummy variables
lm128_B = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
lm64_B = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
#summary(lm128_B) Run this only if you want to see hundreds of dummy variables printed
#summary(lm64_B)
model_b_results<-c(summary(lm128_B$r.squared), summary(lm64_B$r.squared))
model_b_results
dt$week<-as.factor(dt$week)#Factor and create dummy variables
lm128_B = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
lm64_B = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
summary(lm128_B) Run this only if you want to see hundreds of dummy variables printed
dt$week<-as.factor(dt$week)#Factor and create dummy variables
lm128_B = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
lm64_B = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
summary(lm128_B) #Run this only if you want to see hundreds of dummy variables printed
summary(lm64_B)
model_b_results<-c(summary(lm128_B$r.squared), summary(lm64_B$r.squared))
model_b_results
model_b_results<-(summary(lm128_B$r.squared), summary(lm64_B$r.squared))
model_b_results<-str(summary(lm128_B$r.squared), summary(lm64_B$r.squared))
model_b_results<-str(summary(lm128_B$adj.r.squared), summary(lm64_B$adj.r.squared))
model_b_results<-c(summary(lm128_B$adj.r.squared), summary(lm64_B$adj.r.squared))
model_b_results
lm128_B$adj.r.squared
names(lm128_B)
summary(lm128_B) #Run this only if you want to see hundreds of dummy variables printed
names(lm128_B)
model_b_results<-c(summary(lm128_B$residuals), summary(lm64_B$residuals))
model_b_results
model_b_results<-c(summary(lm128_B$fitted.values), summary(lm64_B$fitted.values))
model_b_results
model_b_results<-c(summary((lm128_B)$adj.r.squared)))
model_b_results<-c(summary((lm128_B)$adj.r.squared))
model_b_results
dt$week<-as.factor(dt$week)#Factor and create dummy variables
lm128_B = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
lm64_B = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64) + week, data = dt)
summary(lm128_B)
summary(lm64_B)
dt$svelocity128 <- (dt$q_tide128/dt$acv)
dt$svelocity64 <- (dt$q_tide64/dt$acv)
SalesVelocity128 <- sum(dt$svelocity128)
SalesVelocity64 <- sum(dt$svelocity64)
SalesVelocity128
SalesVelocity64
#install.packages('devtools')#Packages required
#devtools::install_github("ropensci/skimr")
install.packages('arm')
knitr::opts_chunk$set(echo = TRUE)
#install.packages('devtools')#Packages required
#devtools::install_github("ropensci/skimr")
#install.packages('arm')#to plot coefficients
library(arm)
lm128 = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64), data = dt)
lm64 = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64), data = dt)
summary(lm128)
summary(lm64)
lm128_coef<- summary(lm128)$coefficients
lm64_coef<-summary(lm64)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graph<-c(lm64_coef[2:3,1],lm128_coef[2:3,1])
pe_graph
barplot(pe_graph, main = "Price Elasticity", xlab = "Tide64's price elasticities            Tide128's price elasticities", col = rainbow(4))
lm128 = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64), data = dt)
lm64 = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64), data = dt)
summary(lm128)
summary(lm64)
lm128_coef<- summary(lm128)$coefficients
lm64_coef<-summary(lm64)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graph<-c(lm64_coef[2:3,1],lm128_coef[2:3,1])
pe_graph
barplot(pe_graph, main = "Price Elasticity", xlab = "Tide64's price elasticities              Tide128's price elasticities", col = rainbow(4))
lm128 = lm(log(svelocity128) ~ log(p_tide128)+log(p_tide64), data = dt)
lm64 = lm(log(svelocity64) ~ log(p_tide128)+log(p_tide64), data = dt)
summary(lm128)
summary(lm64)
lm128_coef<- summary(lm128)$coefficients
lm64_coef<-summary(lm64)$coefficients#Lets graph these coefficients so we can see all these at a glance
pe_graph<-c(lm64_coef[2:3,1],lm128_coef[2:3,1])
pe_graph
barplot(pe_graph, main = "Price Elasticity", xlab = "Tide64's price elasticities              Tide128's price elasticities", col = rainbow(4), names.arg = c('Cross','Own', 'Own','Cross' ))
coefplot(lm64_B)
coefplot(lm64_B)
coefplot(lm128_B)
par(mfrow=c(1,2))
coefplot(lm64_B)
coefplot(lm128_B)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
coefplot(lm64_B, title('Seasonality of Tide 64'))#Purpose of arm package
par(mfrow=c(1,2))
coefplot(lm64_B, title('Seasonality of Tide 64'))#Purpose of arm package
par(mfrow=c(1,2))
par(mfrow=c(1,1))
coefplot(lm64_B, title('Seasonality of Tide 64'))#Purpose of arm package
par(mfrow=c(1,2))
par(mfrow=c(1,1))
coefplot(lm64_B)#Purpose of arm package
coefplot(lm128_B)
par(mfrow=c(1,2))
coefplot(lm64_B)#Purpose of arm package
coefplot(lm128_B)
par(mfrow=c(1,1))
